<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE tmx SYSTEM "tmx11.dtd">
<tmx version="1.1">
  <header creationtool="OmegaT" o-tmf="OmegaT TMX" adminlang="EN-US" datatype="plaintext" creationtoolversion="3.0.8_3" segtype="sentence" srclang="EN-US"/>
  <body>
<!-- Default translations -->
    <tu>
      <tuv lang="EN-US">
        <seg>''' 4.2 Information Gathering '''
----</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140127T090635Z" creationid="haruyama" creationdate="20140127T090635Z">
        <seg>''' 4.2 情報収集 '''
----</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>''' 4.3 Testing for configuration management '''
----</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140208T100441Z" creationid="haruyama" creationdate="20140208T100441Z">
        <seg>''' 4.3 構成管理のためのテスト '''
----</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>'''Our approach in writing this guide'''</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140126T092739Z" creationid="haruyama" creationdate="20140126T092739Z">
        <seg>'''このガイトを書く上ので我々のアプローチ'''</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>'''What is Web Application Penetration Testing?'''&lt;br&gt;
A penetration test is a method of evaluating the security of a computer system or network by simulating an attack.</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140126T074130Z" creationid="haruyama" creationdate="20140126T074018Z">
        <seg>'''Webアプリケーションペネトレーションテストとは?'''&lt;br&gt;
ペネトレーションテストは, 攻撃をシミュレートしてコンピュータシステムないしネットワークのセキュリティを評価する方法です.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>'''What is a vulnerability?'''&lt;br&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140126T074439Z" creationid="haruyama" creationdate="20140126T074439Z">
        <seg>'''脆弱性とは?'''&lt;br&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>'''What is the OWASP testing methodology?'''&lt;br&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140126T100152Z" creationid="haruyama" creationdate="20140126T095055Z">
        <seg>'''OWASP のテスト方法とは?'''&lt;br&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* Collaborative: we usually perform brainstorming before the articles are written so we can share our ideas and develop a collective vision of the project.</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140126T100313Z" creationid="haruyama" creationdate="20140126T093010Z">
        <seg>* 協調的: 通常我々は記事を書く前にブレインストーミングをして考えを共有しプロジェクトの共同のビジョンを発展させます.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;br&gt;
The following parameters represent two access points (gates) to the application:
&lt;pre&gt;
http://www.example.com/Appx.jsp?a=1&amp;b=1
&lt;/pre&gt;
In this case, the application shows two gates (parameters a and b).</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140126T101303Z" creationid="haruyama" creationdate="20140126T101303Z">
        <seg>&lt;br&gt;
以下のパラメータはアプリケーションに対する2つのアクセスポイント(ゲート)を表しています.
&lt;pre&gt;
http://www.example.com/Appx.jsp?a=1&amp;b=1
&lt;/pre&gt;
この場合, アプリケーションは(パラメータa, b の) 2つのゲートを示しています.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A Web Application Penetration Test focuses only on evaluating the security of a web application.&lt;br&gt;
The process involves an active analysis of the application for any weaknesses, technical flaws, or vulnerabilities.</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140126T074309Z" creationid="haruyama" creationdate="20140126T074309Z">
        <seg>Webアプリケーションペネトレーションテストは、Webアプリケーションのセキュリティを評価にのみ焦点を当てています.&lt;br&gt;このプロセスは, 任意の弱点、技術的な欠陥、または脆弱性についてのアプリケーションのアクティブな分析を含んでいます.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A spreadsheet with the directory tree of the application and all the access points would be useful for the second phase.&lt;br&gt; &lt;br&gt;
* Active mode: in this phase, the tester begins to test using the methodology described in the follow paragraphs.</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140126T101526Z" creationid="haruyama" creationdate="20140126T101526Z">
        <seg>アプリケーションのディレクトリツリーとそのアクセスポイントすべてのスプレッドシートは, 次の段階のために有用でしょう.&lt;br&gt; &lt;br&gt;
* アクティブモード: この段階では, テスターは以降の段落で説明する方法を用いてテストを始めます.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A test is an action that tends to show a vulnerability in the application.</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140126T092717Z" creationid="haruyama" creationdate="20140126T092633Z">
        <seg>テストは, アプリケーションの脆弱性を示す傾向があるアクションです.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A threat is a potential attack that, by exploiting a vulnerability, may harm the assets owned by an application (resources of value, such as the data in a database or in the file system).</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140126T092644Z" creationid="haruyama" creationdate="20140126T092528Z">
        <seg>脅威は, アプリケーションが所有する資産(データベースやファイル·システム内のデータのような価値のある資源)に脆弱性を利用して損害を与える可能性がある潜在的な攻撃です.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A vulnerability is a flaw or weakness in a system's design, implementation, or operation and management that could be exploited to violate the system's security policy.</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140126T092319Z" creationid="haruyama" creationdate="20140126T092319Z">
        <seg>脆弱性は、システムのセキュリティポリシーを破る悪用される可能性があるシステムの設計や実装または運用や管理の不備や弱点です.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All the gates found in this phase represent a point of testing.</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140126T101341Z" creationid="haruyama" creationdate="20140126T101341Z">
        <seg>この段階で見つかったゲートすべてが, テストのポイントを表します.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Any security issues that are found will be presented to the system owner together with an assessment of their impact and often with a proposal for mitigation or a technical solution.</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140126T092330Z" creationid="haruyama" creationdate="20140126T074426Z">
        <seg>見つかったセキュリティ問題は, それらの影響の評価と, 多くの場合緩和策や技術的な解決策の提案を加えて, システム所有者に提示されます.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>At the end of this phase, the tester should understand all the access points (''gates'') of the application (e.g., HTTP headers, parameters, and cookies).</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140126T100708Z" creationid="haruyama" creationdate="20140126T100708Z">
        <seg>この段階の最後には, テスターはアプリケーションのアクセスポイント("ゲート")(例えば, HTTPのヘッダ, パラメータ, クッキー)のすべてを理解する必要があります.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By using public tools (search engines), scanners, sending simple HTTP requests, or specially crafted requests, it is possible to force the application to leak information, e.g., disclosing error messages or revealing the versions and technologies used.&lt;br&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140127T091509Z" creationid="haruyama" creationdate="20140127T091509Z">
        <seg>公開のツール(サーチエンジン) や スキャナの利用や単純な HTTP リクエストや特別に工夫したリクエストの送信によって, アプリケーションに情報を漏らすよう強制するできます. 例えば, エラーメッセージを開示したり利用しているバージョンや技術の露出です.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Clearly, focusing only on the web application will not be an exhaustive test.</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140208T094801Z" creationid="haruyama" creationdate="20140208T094801Z">
        <seg>明らかに, Webアプリケーションにのみ集中するのは網羅的なテストではありません.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Discovery analysis can be useful to reveal details such as web applications used for administrative purposes.</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140127T091923Z" creationid="haruyama" creationdate="20140127T091923Z">
        <seg>検出解析は, 管理目的で利用されるウェブアプリケーションのような細部を暴露するのにも有用となります.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Everything is free.</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140126T092957Z" creationid="haruyama" creationdate="20140126T092957Z">
        <seg>すべては自由です.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, the tester could find the following:
&lt;pre&gt;
https://www.example.com/login/Authentic_Form.html
&lt;/pre&gt;
This may indicate an authentication form in which the application requests a username and a password.</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140126T101135Z" creationid="haruyama" creationdate="20140126T100924Z">
        <seg>たとえば, テスターは以下のURLから推測できるでしょう.
&lt;pre&gt;
https://www.example.com/login/Authentic_Form.html
&lt;/pre&gt;
このURLが示す先にはアプリケーションがユーザ名とパスワードを要求する認証フォームが含まれている事を示しているだろう.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In addition, it can reveal old versions of files or artifacts such as undeleted, obsolete scripts, crafted during the test/development phase or as the result of maintenance.</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140127T092257Z" creationid="haruyama" creationdate="20140127T092257Z">
        <seg>加えて, テスト/開発フェイズの間や保守の結果として作られた, 削除されていない/廃止されたスクリプトなどのファイルや成果物の古いバージョンを暴露することがあります.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In fact it takes only a single vulnerability to undermine the security of the entire infrastructure, and even small and (almost) unimportant problems may evolve into severe risks for another application on the same server.</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140209T052349Z" creationid="haruyama" creationdate="20140209T052349Z">
        <seg>実際, たった1つの脆弱性が全体のインフラのセキュリティを台無しにすることもありますし, 小さく(ほとんど)重要でない問題が同じサーバの別のアプリケーションの深刻なリクスに反転することさえあります.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In order to address these problems, it is of utmost importance to perform an in-depth review of configuration and known security issues.</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140209T052823Z" creationid="haruyama" creationdate="20140209T052823Z">
        <seg>これらの問題に対処するためには, 構成と既知のセキュリティ問題についての詳細なレビューを行なうのが最も重要です.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Indeed, penetration testing is only an appropriate technique for testing the security of web applications under certain circumstances.</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140126T095337Z" creationid="haruyama" creationdate="20140126T095337Z">
        <seg>実際, ペネトレーションテストはある状況のもとでウェブアプリケーションをテストする妥当なテクニックにすぎません.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Information Gathering is the most critical step of an application security test.</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140127T090808Z" creationid="haruyama" creationdate="20140127T090756Z">
        <seg>情報収集はアプリケーションセキュリティテストのもっとも重要なステップです.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Information revealed will often be useful to a tester serving as input to more impacting follow-on tests.</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140209T051306Z" creationid="haruyama" creationdate="20140209T051132Z">
        <seg>明らかになった情報は, よりインパクトのある以降の攻撃の入力としてテスタにとって有用になる場合があります.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Information such as error codes can inform the tester about technologies and products being used by the application.&lt;br&gt;
In many cases, error codes can be easily invoked without the need for specialist skills or tools, due to bad exception handling design and coding.</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140208T094219Z" creationid="haruyama" creationdate="20140208T094219Z">
        <seg>このエラーコードのような情報は, アプリケーションで利用されている技術は製品の情報をテスターに与えます.&lt;br&gt;
多くの場合で, 設計やコーディングでの例外の扱いが悪いために, エラーコードは専門家のスキルやツールなしでも簡単に呼び出すことができます.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Information such as source code, HTTP methods permitted, administrative functionality, authentication methods, and infrastructural configurations can be obtained.&lt;br&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140209T051136Z" creationid="haruyama" creationdate="20140209T045620Z">
        <seg>ソースコードや許可されている HTTP のメソッド, 管理機能, 認証法, インフラの設定といった情報が得られる場合があります.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It cannot be as comprehensive as the information possibly gathered by performing a broader infrastructure analysis.</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140208T094927Z" creationid="haruyama" creationdate="20140208T094927Z">
        <seg>より広いインフラの分析を実行することで得られる情報のほうが包括的です.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Often analysis of the infrastructure and topology architecture can reveal a great deal about a web application.</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140209T045534Z" creationid="haruyama" creationdate="20140209T045534Z">
        <seg>インフラとトポロジアーキテクチャの分析は, しばしばWebアプリケーションについて多くの情報をもたらします.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Penetration testing will never be an exact science where a complete list of all possible issues that should be tested can be defined.</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140126T095211Z" creationid="haruyama" creationdate="20140126T095211Z">
        <seg>ペネトレーションテストは, テストされるべきすべての可能性のある問題の完全なリストを定義できる正確な科学になることはありません.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That means rough consensus, wider audience and participation.&lt;br&gt;
This approach tends to create a defined Testing Methodology that will be:
* Consistent
* Reproducible
* Under quality control&lt;br&gt;
The problems that we want to be addressed are:
* Document all
* Test all
We think it is important to use a method to test all known vulnerabilities and document all the pen test activities.&lt;br&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140126T093951Z" creationid="haruyama" creationdate="20140126T093454Z">
        <seg>これは, 粗い同意とより広い観衆や参加を意味します.&lt;br&gt;
このアプローチは, 以下のような性質を持つようにテストの方法論を定義する傾向があります.
* 一貫している
* 再現可能である
* 品質管理されている&lt;br&gt;
我々が対処したい問題は以下の通りです:
* 文書 すべてl
* テスト すべて
我々は, すべての既知の脆弱性をテストする方法を利用することとすべてのペネトレーションテストについて文書化することが重要と考えています.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The  first phase in security assessment is focused on collecting as much information as possible about a target application.</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140127T090737Z" creationid="haruyama" creationdate="20140127T090737Z">
        <seg>セキュリティ評価の最初の段階では, ターゲットについての情報を可能な限り多く集めることに焦点を当てます.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Information Gathering section explains how to perform a passive mode test.</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140126T100852Z" creationid="haruyama" creationdate="20140126T100852Z">
        <seg>情報収集の節でパッシブモードのテストをどのように実行するか説明します.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The OWASP approach is Open and Collaborative:
* Open: every security expert can participate with his or her experience in the project.</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140126T093202Z" creationid="haruyama" creationdate="20140126T092810Z">
        <seg>OWASP のアプローチはオープンで協調的(Collaborative)です:
* オープン: セキュリティの専門家は全員プロジェクトに自らの経験を持って参加できます.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The goal is to collect all the possible testing techniques, explain them, and keep the guide updated.&lt;br&gt;
The OWASP Web Application Penetration Testing method is based on the black box approach.</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140126T095451Z" creationid="haruyama" creationdate="20140126T095451Z">
        <seg>すべての可能なテストテクニックを収集し, それらを説明し, ガイドを更新し続けることが目標です.&lt;br&gt;
OWASP ウェブアプリケーションペネトレーションテスト法は, ブラックボックスアプローチに基きます.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The listener could reveal sensitive data as well as configuration settings or running database instances if insecurely configured and probed with manual or automated techniques.</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140209T051930Z" creationid="haruyama" creationdate="20140209T050926Z">
        <seg>リスナは, 安全でなく設定された場合にマニュアルないし自動化された技術で検査されると, 機密データだけでなく構成の設定や実行しているデータベースインスタンスについて漏らしてしまいます.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The security test should endeavour to test as much of the code base as possible.</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140127T090932Z" creationid="haruyama" creationdate="20140127T090932Z">
        <seg>セキュリティテストは, コードベースの可能な限り大きな部分に対してテストするよう努める必要があります.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The tester knows nothing or very little information about the application to be tested.</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140126T095517Z" creationid="haruyama" creationdate="20140126T095517Z">
        <seg>テスターはテストされるアプリケーションについてなにも知らないかほんの少しの情報しか知りません.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The testing model consists of:
* Tester: Who performs the testing activities 
* Tools and methodology: The core of this Testing Guide project
* Application: The black box to test
The test is divided into 2 phases:
* Passive mode: in the passive mode, the tester tries to understand the application's logic, and plays with the application.</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140126T100813Z" creationid="haruyama" creationdate="20140126T100137Z">
        <seg>テストのモデルは以下から構成されます:
* テスター: テスト活動をする人
* ツールと方法: このテストガイドプロジェクトのコア
* アプリケーション: テストされるブラックボックス
テストは2つの段階に分割されます:
* パッシブモード: パッシブモードでは, テスターはアプリケーションのロジックを理解しようと試み, アプリケーションをつつきます.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This Chapter describes the OWASP Web Application Penetration testing methodology and explains how to test each vulnerability.</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140126T100140Z" creationid="haruyama" creationdate="20140126T073904Z">
        <seg>この章では、OWASPのWebアプリケーションペネトレーションテストの方法とそれぞれの脆弱性をテストする方法について説明します.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This section will help you identify and map out every area within the application that should be investigated once your enumeration and mapping phase has been completed.</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140208T093508Z" creationid="haruyama" creationdate="20140208T092247Z">
        <seg>この節では, 列挙とマッピングフェイズが完了した後で調査すべきアプリケーション内のすべての領域を特定しマッピングする方法を示します.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This task can be carried out in many different ways.</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140127T091209Z" creationid="haruyama" creationdate="20140127T091209Z">
        <seg>このタスクは, 異なる多くの方法で実行できます.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thus mapping all possible paths through the code to facilitate thorough testing is paramount.</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140127T091151Z" creationid="haruyama" creationdate="20140127T091151Z">
        <seg>ですので, 徹底したテストを支援するためにコードへのすべての可能なパスをマッピングすることは, 最重要です.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tools can be used for information gathering, for example, an HTTP proxy to observe all the HTTP requests and responses.</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140126T100605Z" creationid="haruyama" creationdate="20140126T100605Z">
        <seg>情報を集めるのにツールが利用できます. 例えば, すべてのHTTPリクエストとレスポンスを観察するためにHTTP pxoxy を用います.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We have split the set of active tests in 9 sub-categories for a total of 66 controls:
* Configuration Management Testing
* Business Logic Testing
* Authentication Testing 
* Session Management Testing
* Authorization testing
* Data Validation Testing 
* Denial of Service Testing 
* Web Services Testing 
* Ajax Testing</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140126T101723Z" creationid="haruyama" creationdate="20140126T101723Z">
        <seg>アクティブテストの集合を, 66のコントロールすべてについて9つのサブカテゴリに分割しています.
* Business Logic Testing
* Authentication Testing 
* Session Management Testing
* Authorization testing
* Data Validation Testing 
* Denial of Service Testing 
* Web Services Testing 
* Ajax Testing</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[[Testing for Application Discovery (OWASP-IG-005)|4.2.5 Application Discovery  (OWASP-IG-005)]] [rename to "Enumerate applications on webserver"]&lt;br&gt;
Application discovery is an activity oriented to the identification of the web applications hosted on a web server/application server.&lt;br&gt;
This analysis is important because often there is not a direct link connecting the main application backend.</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140208T093422Z" creationid="haruyama" creationdate="20140127T091819Z">
        <seg>[[Testing for Application Discovery (OWASP-IG-005)|4.2.5 アプリケーションの検出 (OWASP-IG-005)]] [rename to "Enumerate applications on webserver"]&lt;br&gt;
アプリケーションの検出は, ウェブサーバ/アプリケーションサーバにホストされたウェブアプリケーションの特定のための行動です.&lt;br&gt;
メインアプリケーションバックエンドと接続する直接のリンクがない場合がしばしばあるので, この解析は重要です.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[[Testing for DB Listener  (OWASP-CM-002)|4.3.2 DB Listener Testing (OWASP-CM-002)]]&lt;br&gt;
During the configuration of a database server, many DB administrators do not adequately consider the security of the DB listener component.</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140209T051157Z" creationid="haruyama" creationdate="20140209T050623Z">
        <seg>[[Testing for DB Listener  (OWASP-CM-002)|4.3.2 DB リスナのテスト (OWASP-CM-002)]]&lt;br&gt;
データベースサーバの設定で, 多くの DB 管理者は DBリスナコンポーネントのセキュリティを適切に考慮していません.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[[Testing for Error Codes (OWASP-IG-006)|4.2.6 Analysis of Error Codes  (OWASP-IG-006)]]&lt;br&gt;
During a penetration test, web applications may divulge information that is not intended to be seen by an end user.</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140208T094008Z" creationid="haruyama" creationdate="20140208T094008Z">
        <seg>[[Testing for Error Codes (OWASP-IG-006)|4.2.6 エラーコードの解析  (OWASP-IG-006)]]&lt;br&gt;
侵入テスト中に, ウェブアプリケーションは, エンドユーザに見られることを意図してない情報を漏らすことがあります.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[[Testing for SSL-TLS (OWASP-CM-001)|4.3.1 SSL/TLS Testing (OWASP-CM-001)]]&lt;br&gt;
SSL and TLS are two protocols that provide, with the support of cryptography, secure channels for the protection, confidentiality, and authentication of the information being transmitted.&lt;br&gt;
Considering the criticality of these security implementations, it is important to verify the usage of a strong cipher algorithm and its proper implementation.</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140209T051153Z" creationid="haruyama" creationdate="20140209T050015Z">
        <seg>[[Testing for SSL-TLS (OWASP-CM-001)|4.3.1 SSL/TLS のテスト (OWASP-CM-001)]]&lt;br&gt;
SSL と TLS は, 暗号のサポートにより転送する情報の保護, 機密性, 認証をする安全なチャンネルを提供するプロトコルです.&lt;br&gt;
これらのセキュリティ実装の重要性を考慮すると, 強い暗号アルゴリズムとその適切な実装の利用がされているか確認するのは重要です.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[[Testing for Web Application Fingerprint (OWASP-IG-004)|4.2.4 Testing Web Application Fingerprint  (OWASP-IG-004)]]&lt;br&gt;
Application fingerprint is the first step of the Information Gathering process; knowing the version and type of a running web server allows testers to determine known vulnerabilities and the appropriate exploits to use during testing.</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140208T093911Z" creationid="haruyama" creationdate="20140208T093911Z">
        <seg>[[Testing for Web Application Fingerprint (OWASP-IG-004)|4.2.4 ウェブサーバの指紋のテスト  (OWASP-IG-004)]]&lt;br&gt;
アプリケーションの指紋の収集は, 情報収集プロセスの最初のステップです. 動作しているウェブサーバのバージョンや種類を知ることで, テスト中に用いる既知の脆弱性や適切なエクスプロイトを決定できます.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[[Testing for Web Server Fingerprint (OWASP-IG-00x)|4.2.x Testing Web Server Fingerprint  (OWASP-IG-00x)]]&lt;br&gt;
Application fingerprint is the first step of the Information Gathering process; knowing the version and type of a running web server allows testers to determine known vulnerabilities and the appropriate exploits to use during testing.</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140208T093829Z" creationid="haruyama" creationdate="20140208T093635Z">
        <seg>[[Testing for Web Server Fingerprint (OWASP-IG-00x)|4.2.x ウェブサーバの指紋のテスト  (OWASP-IG-00x)]]&lt;br&gt;
アプリケーションの指紋の収集は, 情報収集プロセスの最初のステップです. 動作しているウェブサーバのバージョンや種類を知ることで, テスト中に用いる既知の脆弱性や適切なエクスプロイトを決定できます.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[[Testing for application configuration management (OWASP-CM-004)|4.3.4 Application Configuration Management Testing  (OWASP-CM-004)]]&lt;br&gt;
Web applications hide some information that is usually not considered during the development or configuration of the application itself.&lt;br&gt;
This data can be discovered in the source code, in the log files or in the default error codes of the web servers.</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140209T053235Z" creationid="haruyama" creationdate="20140209T053031Z">
        <seg>[[Testing for application configuration management (OWASP-CM-004)|4.3.4 アプリケーションの構成管理のテスト  (OWASP-CM-004)]]&lt;br&gt;
Web アプリケーションは, アプリケーション自身の開発や設定の間に通常考慮されていないいくつかの情報を隠します.&lt;br&gt;
このデータは, ソースコードやログファイル, Web サーバのデフォルトのエラーコードから発見できることがあります.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[[Testing for infrastructure configuration management (OWASP-CM-003)|4.3.3 Infrastructure Configuration Management Testing  (OWASP-CM-003)]]&lt;br&gt;
The intrinsic complexity of interconnected and heterogeneous web server infrastructure, which can count hundreds of web applications, makes configuration management and review a fundamental step in testing and deploying every single application.</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140209T052203Z" creationid="haruyama" creationdate="20140209T051925Z">
        <seg>[[Testing for infrastructure configuration management (OWASP-CM-003)|4.3.3 インフラ構成管理のテスト  (OWASP-CM-003)]]&lt;br&gt;
数百のWebアプリケーションからなることもある, 相互接続された様々な種類の Web サーバインフラ固有の複雑さは, 構成の管理を行なうことと, 1つ1つのアプリケーションについてテストとデプロイの基本的な手順をレビューすることを必要とします.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[[Testing: Identify application entry points (OWASP-IG-003)|4.2.3 Identify application entry points  (OWASP-IG-003)]]&lt;br&gt;
Enumerating the application and its attack surface is a key precursor before any attack should commence.</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140208T093543Z" creationid="haruyama" creationdate="20140208T092041Z">
        <seg>[[Testing: Identify application entry points (OWASP-IG-003)|4.2.3 アプリケーションのエントリポイントの特定  (OWASP-IG-003)]]&lt;br&gt;
攻撃を行なう前に, アプリケーションとその攻撃箇所を列挙するのは重要な準備です.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[[Testing: Identify application exit/handover points (OWASP-IG-00x)|4.2.x Identify application exit/handover points  (OWASP-IG-00x)]]&lt;br&gt;
Identify the functional exit points of the application and points where the application hands over to another application that may, or may not, be within scope of testing (e.g. handover to a payment gateway).</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140208T092923Z" creationid="haruyama" creationdate="20140208T092523Z">
        <seg>[[Testing: Identify application exit/handover points (OWASP-IG-00x)|4.2.x アプリケーションの終了/移譲ポイントの特定 (OWASP-IG-00x)]]&lt;br&gt;
アプリケーションの機能の終了ポイントと(決済ゲートウェイへの移譲のような) テストのスコープに入れる可能性のある他のアプリケーションへ処理を移譲する点を特定します.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[[Testing: Map paths through the application (OWASP-IG-00x)|4.2.x Map paths through the application (OWASP-IG-00x)]]&lt;br&gt;
Enumerating the application and its attack surface is a key precursor before any attack should commence.</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140208T093613Z" creationid="haruyama" creationdate="20140208T093456Z">
        <seg>[[Testing: Map paths through the application (OWASP-IG-00x)|4.2.x アプリケーションのパスのマッピング (OWASP-IG-00x)]]&lt;br&gt;
攻撃を行なう前に, アプリケーションとその攻撃箇所を列挙するのは重要な準備です.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[[Testing: Review webpage comments and metadata  (OWASP-IG-00x)|4.2.x Review webpage comments and metadata(OWASP-IG-00x)]]
Review the webpage metadata, HTML, JavaScript comments for sensitive information and disabled links/scripts.</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140208T091752Z" creationid="haruyama" creationdate="20140208T090054Z">
        <seg>[[Testing: Review webpage comments and metadata  (OWASP-IG-00x)|4.2.x ウェブページのコメントとメタデータのレビュー(OWASP-IG-00x)]]
重要の情報や無効となったリンクやスクリプトがないか, ウェブページのメタデータや HTML/Javascript のコメントをレビューします.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[[Testing: Search engine discovery/reconnaissance (OWASP-IG-002)|4.2.2 Search Engine Discovery/Reconnaissance  (OWASP-IG-002)]]&lt;br&gt;
Search engines, such as Google, can be used to discover issues related to the web application structure or error pages produced by the application that have been publicly exposed.</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140208T094725Z" creationid="haruyama" creationdate="20140208T094725Z">
        <seg>[[Testing: Search engine discovery/reconnaissance (OWASP-IG-002)|4.2.2 サーチエンジンによる発見や調査  (OWASP-IG-002)]]&lt;br&gt;
Google のようはサーチエンジンは, Webアプリケーションの構造や公けに露出したアプリケーションによって生成されたエラーページに関する問題を発見するのに利用できる.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[[Testing: Spiders, Robots, and Crawlers  (OWASP-IG-001)|4.2.1 Spiders, Robots and Crawlers (OWASP-IG-001)]] [rename to "Review webserver metafiles" ]
This phase of the Information Gathering process consists of browsing and capturing resources related to the application being tested.</seg>
      </tuv>
      <tuv lang="JA" changeid="haruyama" changedate="20140208T091731Z" creationid="haruyama" creationdate="20140208T085847Z">
        <seg>[[Testing: Spiders, Robots, and Crawlers  (OWASP-IG-001)|4.2.1 スパイダーやロボット, クローラー (OWASP-IG-001)]] [rename to "Review webserver metafiles" ]
情報収集プロセスのこのフェイズでは, テストするアプリケーションに関する資源をブラウズし保存することから構成されます.</seg>
      </tuv>
    </tu>
<!-- Alternative translations -->
  </body>
</tmx>
